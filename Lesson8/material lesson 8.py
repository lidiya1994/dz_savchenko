#Кортежи(tuple)- это те же списки

a = (1,2,3,4,5,6)
print(a)

a = (1,) # запятая после единицы указывает кортеж
print(a)

a = (1) #целое число
print(a)

#Зачем нужны кортежи, если есть списки?

#*Кортеж защищен от изменений, как намеренных (что плохо), так и случайных

a = (1,2,3,4,5,6)
b = [1,2,3,4,5,6]

print(a.__sizeof__())
print(b.__sizeof__())

#Из кортежа можно извлекать элементы и брать срезы:

a = [1, 2, 3, 4, 5, 6]
print(a[0:3])
print(a[:3])
print(a[1:])
print(a[2::2])
print(a[::2])

#Однако изменять его элементы нельзя

# a[1] = 11
#TypeError: 'tuple' object
# пустой список
# a = list()

a = (10,2.13, "square", 89,'C')
b = [1,2,3]
c = list(a)
d = tuple(b)
print(a)
print(b)
print(c)
print(d)


#Кортежи могут содержать списки, также как списки быть вложеннымим

a = (1,"do", ["param", 10,20])
a[2][1] = 15
print(a)

#Объединение кортежей
#Кортежи можем складывать только с одинаковыми типами данных

#x = (1,2,3,4)
#y =

#Умножение кортежей(операция умножения приводит к тому, что кортеж повторяется несколько раз
x = (1,2,3,4)
z = x * 2
print(z)

#Функции кортежей
#В отличие от списков у кортежей нет методов, таких как append(),remove(),extend(),insert(),или pop()


a = (1,2,3,4,5,5)
print(a.count(5),len(a))

#Функции кортежей
#Функция max() возвращает самый большой элемент
#последовательности,а min() самый маленький

a = (1,2,3,4,5,5)
print('max',max(a),'min',min(a))


